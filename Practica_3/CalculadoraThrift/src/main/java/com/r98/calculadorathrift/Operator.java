package com.r98.calculadorathrift;

/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-04-13")
public enum Operator implements org.apache.thrift.TEnum {
  ADD(1),
  SUBSTRACT(2),
  MULTIPLY(3),
  DIVIDE(4),
  ADDVECTOR(5),
  SUBSTRACTVECTOR(6),
  MULTIPLYVECTOR(7),
  POW(8);

  private final int value;

  private Operator(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static Operator findByValue(int value) { 
    switch (value) {
      case 1:
        return ADD;
      case 2:
        return SUBSTRACT;
      case 3:
        return MULTIPLY;
      case 4:
        return DIVIDE;
      case 5:
        return ADDVECTOR;
      case 6:
        return SUBSTRACTVECTOR;
      case 7:
        return MULTIPLYVECTOR;
      case 8:
        return POW;
      default:
        return null;
    }
  }
}
